basePath: /api/v1
definitions:
  container.RouteRequest:
    properties:
      start_point:
        $ref: '#/definitions/domain.Point'
      statuses:
        items:
          $ref: '#/definitions/domain.Status'
        type: array
    required:
    - start_point
    - statuses
    type: object
  container.UpsertContainerRequest:
    properties:
      capacity_liters:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
    required:
    - capacity_liters
    - latitude
    - longitude
    type: object
  domain.Container:
    properties:
      capacity_liters:
        type: integer
      created_at:
        description: |-
          --- CAMPOS ACTUALIZADOS ---
          Estos campos son gestionados por la base de datos y son cruciales para el tracking.
        type: string
      id:
        type: string
      last_fill_level:
        type: integer
      last_updated:
        type: string
      location:
        $ref: '#/definitions/domain.Point'
      status:
        allOf:
        - $ref: '#/definitions/domain.Status'
        description: omitempty porque no se establece al crear
      updated_at:
        type: string
    type: object
  domain.Point:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  domain.Reading:
    properties:
      container_id:
        type: string
      fill_level:
        type: integer
      timestamp:
        type: string
    type: object
  domain.Status:
    enum:
    - low
    - medium
    - high
    type: string
    x-enum-varnames:
    - StatusLow
    - StatusMedium
    - StatusHigh
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: API para la gestión y monitorización en tiempo real de contenedores
    de basura.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Smart Waste Management API
  version: "1.0"
paths:
  /containers:
    get:
      description: Devuelve una lista de todos los contenedores registrados con su
        estado actual.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Container'
            type: array
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtiene todos los contenedores
      tags:
      - Containers
    post:
      consumes:
      - application/json
      description: Registra un nuevo contenedor en el sistema con su ubicación y capacidad.
      parameters:
      - description: Datos del contenedor a crear
        in: body
        name: container
        required: true
        schema:
          $ref: '#/definitions/container.UpsertContainerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Contenedor creado exitosamente
          schema:
            $ref: '#/definitions/domain.Container'
        "400":
          description: Petición inválida o datos incorrectos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Crea un nuevo contenedor
      tags:
      - Containers
  /containers/{id}:
    delete:
      description: Elimina un contenedor y todas sus lecturas asociadas del sistema.
      parameters:
      - description: ID del Contenedor (UUID)
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Sin contenido
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Elimina un contenedor
      tags:
      - Containers
    get:
      description: Devuelve la información detallada de un único contenedor.
      parameters:
      - description: ID del Contenedor (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Container'
        "404":
          description: Contenedor no encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtiene un contenedor por su ID
      tags:
      - Containers
    put:
      consumes:
      - application/json
      description: Actualiza la ubicación y/o la capacidad de un contenedor existente.
      parameters:
      - description: ID del Contenedor (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Nuevos datos del contenedor
        in: body
        name: container
        required: true
        schema:
          $ref: '#/definitions/container.UpsertContainerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Contenedor actualizado exitosamente
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Petición inválida o datos incorrectos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Actualiza un contenedor
      tags:
      - Containers
  /containers/{id}/readings:
    get:
      description: Devuelve una lista de las últimas N lecturas de sensor para un
        contenedor específico.
      parameters:
      - description: ID del Contenedor (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Número máximo de lecturas a devolver (por defecto 50)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Reading'
            type: array
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtiene el historial de lecturas de un contenedor
      tags:
      - Containers
  /readings:
    post:
      consumes:
      - application/json
      description: Registra el nivel de llenado de un contenedor en un momento dado.
      parameters:
      - description: Datos de la lectura
        in: body
        name: reading
        required: true
        schema:
          $ref: '#/definitions/domain.Reading'
      produces:
      - application/json
      responses:
        "202":
          description: Lectura aceptada para procesamiento
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Petición inválida o datos incorrectos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Crea una nueva lectura de sensor
      tags:
      - Ingest
  /routes:
    post:
      consumes:
      - application/json
      description: Calcula una ruta óptima para visitar contenedores basados en su
        estado.
      parameters:
      - description: Parámetros para la generación de la ruta
        in: body
        name: routeRequest
        required: true
        schema:
          $ref: '#/definitions/container.RouteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: La ruta optimizada como una lista ordenada de contenedores
          schema:
            items:
              $ref: '#/definitions/domain.Container'
            type: array
        "400":
          description: Petición inválida o datos incorrectos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Genera una ruta de recogida
      tags:
      - Routes
swagger: "2.0"
